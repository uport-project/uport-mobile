version: 2
jobs:
  node-dependencies:
    working_directory: ~/uport-mobile
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-{{ arch }}-v5-{{ checksum "yarn.lock" }}
            - yarn-{{ arch }}-v5
      - run:
          name: install-dependencies
          command: yarn
      - save_cache:
          key: yarn-{{ arch }}-v5-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/uport-mobile
          paths:
            - node_modules

  node-test:
    working_directory: ~/uport-mobile
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - attach_workspace:
          at: ~/uport-mobile
      - restore_cache:
          keys:
            - yarn-{{ arch }}-v5-{{ checksum "yarn.lock" }}
            - yarn-{{ arch }}-v5
      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test --ci --coverage --maxWorkers=3
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml
      - run:
          name: code-coverage
          command: yarn codecov

      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  package-android-bundle:
    working_directory: ~/uport-mobile
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - attach_workspace:
          at: ~/uport-mobile
      - restore_cache:
          keys:
            - yarn-{{ arch }}-v5-{{ checksum "yarn.lock" }}
            - yarn-{{ arch }}-v5
      - run:
          name: package react native android bundle independently
          command: yarn package-android --max-workers=4
          no_output_timeout: 30m
      - persist_to_workspace:
          root: ~/uport-mobile
          paths:
            - node_modules
            - android/app/build/jsbundle/assets
            - android/app/build/jsbundle/res

  android-dependencies:
    working_directory: ~/uport-mobile/android
    docker:
      - image: circleci/android:api-28-node8-alpha
        environment:
          YARN_VERSION: 1.2.1
          ANDROID_HOME: /opt/android/sdk
          TERM: dumb
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
    steps:
      - checkout:
          path: ~/uport-mobile
      - attach_workspace:
          at: ~/uport-mobile

      - run: wget https://releases.hashicorp.com/vault/0.10.1/vault_0.10.1_linux_amd64.zip -O ~/vault.zip
      - run: mkdir -p ./tools/vault/ && unzip ~/vault.zip -d ./tools/vault/

      - restore_cache:
          keys:
            - android-{{ arch }}-v4-{{ checksum "build.gradle" }}
            - android-{{ arch }}-v4
      - run:
          name: ensure daemon is fresh
          command: ./gradlew --stop
      - run:
          name: get android dependencies
          command: ./gradlew :app:dependencies androidDependencies
      - save_cache:
          key: android-{{ arch }}-v4-{{ checksum "build.gradle" }}
          paths:
            - .gradle
            - ~/.gradle

      - persist_to_workspace:
          root: ~/uport-mobile
          paths:
            - android/tools/vault

  android:
    working_directory: ~/uport-mobile/android
    docker:
      - image: circleci/android:api-28-node8-alpha
        environment:
          YARN_VERSION: 1.2.1
          ANDROID_HOME: /opt/android/sdk
          TERM: dumb
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
    steps:
      - checkout:
          path: ~/uport-mobile
      - attach_workspace:
          at: ~/uport-mobile

      - restore_cache:
          keys:
            - android-{{ arch }}-v4-{{ checksum "build.gradle" }}
            - android-{{ arch }}-v4
      - run:
          name: ensure daemon is fresh
          command: ./gradlew --stop
      - run:
          name: get google services json
          command: PATH="$PATH:$(pwd)/tools/vault" && bash ../scripts/pull_google_services.sh
      - run:
          name: build the release APK
          command: ./gradlew :app:deliverArchives -x bundleReleaseJsAndAssets --no-parallel --max-workers 1
      - run:
          name: tests
          command: ./gradlew :app:lint :app:test -x bundleReleaseJsAndAssets --no-parallel --max-workers 1

      - persist_to_workspace:
          root: ~/uport-mobile
          paths:
            - android/app/build/outputs

      - store_artifacts:
          path: build/artifacts

      - store_artifacts:
          path: app/build/reports

  ios:
    working_directory: ~/uport-mobile
    environment:
      FL_OUTPUT_DIR: ~/uport-mobile/ios
      TERM: dumb
      REACT_NATIVE_MAX_WORKERS: 2
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    macos:
      xcode: '10.1.0'
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/uport-mobile
      - run:
          name: Fetch CocoaPods Specs
          command: |
            curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      - attach_workspace:
          at: ~/uport-mobile
      - run:
            name: Install appium server
            command: |
              npm install -g appium
              npm install wd
              pip install Appium-Python-Client      
      - restore_cache:
          keys:
            - bundle-{{ arch }}-v4-ios-{{ checksum "Gemfile.lock" }}
            - bundle-{{ arch }}-v4-ios
      - run: bundle install
      - save_cache:
          key: bundle-{{ arch }}-v4-ios-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - .bundle
            - ~/.bundle
      - run:
          name: xcrun
          command: |
            cd ~/uport-mobile/ios && xcrun instruments -w "iPhone 8 (11.2) [" || true
            pod install --verbose
            npm install
            yarn
      - run:
          name: Fastlane
          command: cd ~/uport-mobile/ios && bundle exec fastlane buildTheApp
      - run:
          name: Build debug version of app
          command: |
            yarn global add react-native-cli
            yarn
            react-native run-ios
      - run:      
          command: |
            npm run start-appium-server
            sleep 5
            npm run run-appium-tests
      - persist_to_workspace:
          root: ~/uport-mobile
          paths:
            - ios/gym
      - store_artifacts:
          path: ~/uport-mobile/ios/gym

  vault:
    docker:
      - image: vault:0.7.3
    steps:
      - run: vault token-renew > /dev/null

  deploy-android:
    working_directory: ~/uport-mobile/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/uport-mobile
      - attach_workspace:
          at: ~/uport-mobile
      - restore_cache:
          keys:
            - bundle-{{ arch }}-v8-{{ checksum "Gemfile.lock" }}
            - bundle-{{ arch }}-v8
      - run: bundle install
      - save_cache:
          key: bundle-{{ arch }}-v8-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - .bundle
            - ~/.bundle

      - run: PATH="$PATH:$(pwd)/tools/vault" && bash ../scripts/pull_service_key.sh && fastlane android internal; rm -f ../google-play-key-file.json

  deploy-ios:
    working_directory: ~/uport-mobile
    environment:
      TERM: dumb
      REACT_NATIVE_MAX_WORKERS: 2
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    macos:
      xcode: '10.1.0'
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/uport-mobile
      - attach_workspace:
          at: ~/uport-mobile
      - restore_cache:
          keys:
            - bundle-{{ arch }}-v4-ios-{{ checksum "Gemfile.lock" }}
            - bundle-{{ arch }}-v4-ios
      - run: bundle install
      - run:
          name: Upload To Testflight
          command: cd ~/uport-mobile/ios && bundle exec fastlane uploadToTestflight
workflows:
  version: 2
  node-android-ios:
    jobs:
      - vault:
          filters:
            tags:
              only: /.*/
      - node-dependencies:
          filters:
            tags:
              only: /.*/
      - node-test:
          requires:
            - node-dependencies
          filters:
            tags:
              only: /.*/
      - package-android-bundle:
          requires:
            - node-dependencies
          filters:
            tags:
              only: /.*/
      - android-dependencies:
          requires:
            - vault
            - node-dependencies
          filters:
            tags:
              only: /.*/
      - android:
          requires:
            - android-dependencies
            - package-android-bundle
          filters:
            tags:
              only: /.*/
      - deploy-android:
          requires:
            - android
          filters:
            tags:
              only: /^[v]*[0-9]+.*/
            branches:
              ignore: /.*/
      - ios:
          filters:
            tags:
              only: /.*/
      - deploy-ios:
          requires:
            - ios
          filters:
            tags:
              only: /^[v]*[0-9]+.*/
            branches:
              ignore: /.*/
